// Generated by CoffeeScript 1.6.3
/*
Helpers
*/


(function() {
  var animateIn, animateOut, appendContact, chatGroup, chatRoomGroup, chatRoomStub, chatRoomTitleGroup, chatRoomTitleStub, contactsList, delay, localVideo, nameLabel, openCall, openChat, saveNameButton, saveNameField, storage, user;

  delay = function(ms, fn) {
    return setTimeout(fn, ms);
  };

  animateOut = function(el, fn) {
    el.className = el.className + ' animated fadeOutUp';
    return delay(500, function() {
      el.className = el.className.replace(' animated fadeOutUp', ' hide');
      if (fn != null) {
        return fn();
      }
    });
  };

  animateIn = function(el, fn) {
    el.className = (el.className + ' animated fadeInDown').replace('hide', '');
    return delay(500, function() {
      el.className = el.className.replace(' animated fadeInDown', '');
      if (fn != null) {
        return fn();
      }
    });
  };

  /*
  Elements
  */


  contactsList = document.querySelector('[data-contacts-list]');

  chatGroup = document.querySelector('[data-chat-group]');

  chatRoomTitleGroup = document.querySelector('[data-chat-room-title-group]');

  chatRoomGroup = document.querySelector('[data-chat-room-group]');

  chatRoomTitleStub = document.querySelector('[data-chat-room-title-stub]');

  chatRoomStub = document.querySelector('[data-chat-room-stub]');

  saveNameButton = document.querySelector('[data-save-name]');

  saveNameField = document.querySelector('[data-name-field]');

  nameLabel = document.querySelector('[data-name-label]');

  /*
  Data
  */


  storage = new Storage.Local;

  user = new Social.User({
    key: 'xfptwovfgvi'
  });

  user.peer.on('open', function() {
    var shareLink;
    document.querySelector('[data-peer-id]').innerHTML = user.peerID;
    shareLink = document.querySelector('[data-peer-id-share]');
    if (shareLink != null) {
      return shareLink.href = shareLink.href.replace('peerID', user.peerID);
    }
  });

  /*
  Events
  */


  localVideo = document.querySelector('[data-local-video]');

  if (localVideo != null) {
    localVideo.onclick = function() {
      return user.setVideo(new Social.Video(document.querySelector('video[data-stream="local"]')));
    };
  }

  document.querySelector('[data-connect]').onclick = function() {
    var connectID;
    connectID = document.querySelector('[data-connect-id]').value;
    return user.connect(connectID, {
      reliable: false,
      onOpen: function(connection) {
        return appendContact(connection);
      },
      onData: function(data) {}
    });
  };

  if (storage.has('name')) {
    nameLabel.innerHTML = nameLabel.innerHTML.replace(/__name__/g, storage.get('name'));
    animateOut(saveNameButton);
    animateOut(saveNameField, function() {
      return animateIn(nameLabel);
    });
  }

  saveNameButton.onclick = function() {
    var name;
    name = saveNameField.value;
    storage.put('name', name);
    animateOut(saveNameButton);
    return animateOut(saveNameField, function() {
      return animateIn(nameLabel);
    });
  };

  appendContact = function(connection) {
    var contact;
    contact = document.querySelector('[data-contact-stub]').cloneNode(true);
    contact.removeAttribute('data-contact-stub');
    contact.className = 'contact';
    contact.innerHTML = contact.innerHTML.replace(/__peer__/g, connection.peer);
    animateIn(contact);
    contactsList.appendChild(contact);
    return contactsList.lastChild.querySelector('[data-call-user]').onclick = function() {
      return openCall(this.getAttribute('data-call-user'));
    };
  };

  openChat = function(connectID) {
    var connection, room, title;
    connection = user.getConnection(connectID);
    title = chatRoomTitleStub.cloneNode(true);
    title.className = title.className.replace('hide', '');
    title.innerHTML = title.innerHTML.replace(/__peer__/g, connection.peer);
    chatRoomTitleGroup.appendChild(title);
    room = chatRoomStub.cloneNode(true);
    room.className = room.className.replace('hide', '');
    room.innerHTML = room.innerHTML.replace(/__peer__/g, connection.peer);
    return chatRoomGroup.appendChild(room);
  };

  openCall = function(connectID) {
    var videoContainer;
    videoContainer = user.call(connectID);
    animateIn(videoContainer);
    return document.querySelector('[data-video-group]').appendChild(videoContainer);
  };

}).call(this);
