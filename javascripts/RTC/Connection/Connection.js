// Generated by CoffeeScript 1.6.3
(function() {
  var _base;

  window.RTC || (window.RTC = {});

  (_base = window.RTC).Connection || (_base.Connection = {});

  window.RTC.Connection.Connection = (function() {
    function Connection(local, remote) {
      var servers;
      this.local = local;
      this.remote = remote;
      servers = null;
      this.conn = new RTCPeerConnection(servers, {
        optional: [
          {
            RtpDataChannels: true
          }
        ]
      });
      this.conn.onconnection = this.onConnection;
      this.conn.onicecandidate = this.onIceCandidate;
      this.conn.onopen = this.onOpen;
      this.conn.onclose = this.onClose;
    }

    Connection.prototype.send = function(message) {
      window.Logger.trace('RTC.Connection.Connection->send');
      if (this.channel) {
        return this.channel.send(message);
      } else {
        return window.Logger.error('Could not send message, no channel set on connection');
      }
    };

    Connection.prototype.onConnection = function() {
      window.Logger.trace('RTC.Connection.Connection->onConnection');
      return this.channel = new DataChannel('test', this.conn);
    };

    Connection.prototype.onIceCandidate = function() {
      return window.Logger.trace('RTC.Connection.Connection->onIceCandidate');
    };

    Connection.prototype.onOpen = function() {
      return window.Logger.trace('RTC.Connection.Connection->onOpen');
    };

    Connection.prototype.onClose = function() {
      return window.Logger.trace('RTC.Connection.Connection->onClose');
    };

    return Connection;

  })();

}).call(this);
